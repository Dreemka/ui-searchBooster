


import { ArgTypes, Meta, Story , Canvas, Controls } from '@storybook/addon-docs';

# Button

Компонент Button в UI-библиотеке - это элемент, который используется для создания кнопок в интерфейсе. 
Он может использоваться для вызова действий, отправки данных, перехода на другую страницу и т.д.


import ContrustBtn from './ContrustBtn.vue';
import selectionIcon from "@/styles/contrust-icon/selection.json";

export const iconsList = () => {
  const result = selectionIcon.icons.map(
    (one) => "contrust-icon-" + one.icon.tags[0]
  );
  result.unshift("");
  return result;
};

<Meta 
  title="ACTUAL/Button"
  argTypes={{
    disabled: {
      description: "Отключает возможность нажатия кнопки",
      table: {
        defaultValue: { summary: false },
      },
      options: [false, true],
      control: "radio",
    },
    rounded: {
      description: "Сделать закругленные края кнопки",
      table: {
        defaultValue: { summary: false },
      },
      options: [false, true],
      control: "radio",
    },
    variant: {
      description: "Внешний вид кнопки",
      table: {
        defaultValue: { summary: "contained" },
      },
      options: ["contained", "outlined", "ghost"],
      control: "select",
    },
    size: {
      description: "Размер кнопки",
      table: {
        defaultValue: { summary: "medium" },
      },
      options: ["x-small", "small", "medium", "large", "x-large"],
      control: "select",
    },
    color: {
      description: "Цветовое оформление кнопки",
      table: {
        defaultValue: { summary: "primary" },
      },
      options: ["primary", "blue", "green", "yellow", "red", "grey"],
      control: "select",
    },
    prependIcon: {
      description: "Иконка слева",
      table: {
        defaultValue: { summary: "" },
      },
      options: iconsList(),
      control: "select",
    },
    appendIcon: {
      description: "Иконка слева",
      table: {
        defaultValue: { summary: "" },
      },
      options: iconsList(),
      control: "select",
    },
    icon: {
      description: "Кнопка иконка",
      table: {
        defaultValue: { summary: "" },
      },
      options: iconsList(),
      control: "select",
    },
  }}
  component={ContrustBtn}/>



export const Template = (args) => ({
  components: { ContrustBtn },
  setup() {
    return { args };
  },
  template: '<ContrustBtn v-bind="args" />',
});


<Canvas>
  <Story 
    name="Button"
    parameters={{
        docs: {
          source: {
            code: '<contrust-btn variant="contained" >Создать запись</contrust-btn>'
          },
        },
     }}
    args={{
      variant: 'contained',
      title: 'Button',
    }}>
    {Template.bind({})}
   </Story>
</Canvas>

<ArgTypes of={ContrustBtn} />
<Controls  />


Browse example stories now by navigating to them in the sidebar.
View their code in the `stories` directory to learn how they work.
We recommend building UIs with a [**component-driven**](https://componentdriven.org) process starting with atomic components and ending with pages.

# Variant

Опция для определения внешнего вида. 

<Canvas>
  <Story 
    name="Contained"
    parameters={{
        docs: {
          source: {
            code: '<contrust-btn variant="contained" >Создать запись</contrust-btn>'
          },
        },
     }}
    args={{
      variant: 'contained',
      title: 'Button',
    }}>
    {Template.bind({})}
  </Story>
  <Story 
    name="Outlined"
    parameters={{
      docs: {
        source: {
          code: '<contrust-btn variant="outlined" >Создать запись</contrust-btn>'
        },
      },
    }}
    args={{
      variant: 'outlined',
      title: 'Button',
    }}>
    {Template.bind({})}
   </Story>
    <Story 
    name="Ghost"
    parameters={{
      
      docs: {
        source: {
          code: '<contrust-btn variant="ghost" >Создать запись</contrust-btn>'
        },
      },
    }}
    args={{
      variant: 'ghost',
      title: 'Button',
    }}>
    {Template.bind({})}
   </Story>
</Canvas>
